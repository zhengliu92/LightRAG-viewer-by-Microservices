// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.21.12
// source: parser_service.proto

package parser_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text    string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Section string `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"`
	PageNum int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
}

func (x *DocText) Reset() {
	*x = DocText{}
	mi := &file_parser_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocText) ProtoMessage() {}

func (x *DocText) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocText.ProtoReflect.Descriptor instead.
func (*DocText) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{0}
}

func (x *DocText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DocText) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *DocText) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type Figure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Section string `protobuf:"bytes,1,opt,name=section,proto3" json:"section,omitempty"`
	Caption string `protobuf:"bytes,2,opt,name=caption,proto3" json:"caption,omitempty"`
	PageNum int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	ImgPath string `protobuf:"bytes,4,opt,name=img_path,json=imgPath,proto3" json:"img_path,omitempty"`
}

func (x *Figure) Reset() {
	*x = Figure{}
	mi := &file_parser_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Figure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Figure) ProtoMessage() {}

func (x *Figure) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Figure.ProtoReflect.Descriptor instead.
func (*Figure) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{1}
}

func (x *Figure) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *Figure) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *Figure) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *Figure) GetImgPath() string {
	if x != nil {
		return x.ImgPath
	}
	return ""
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Section   string `protobuf:"bytes,1,opt,name=section,proto3" json:"section,omitempty"`
	Caption   string `protobuf:"bytes,2,opt,name=caption,proto3" json:"caption,omitempty"`
	PageNum   int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	TableHtml string `protobuf:"bytes,4,opt,name=table_html,json=tableHtml,proto3" json:"table_html,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	mi := &file_parser_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{2}
}

func (x *Table) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *Table) GetCaption() string {
	if x != nil {
		return x.Caption
	}
	return ""
}

func (x *Table) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *Table) GetTableHtml() string {
	if x != nil {
		return x.TableHtml
	}
	return ""
}

type ParseDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DocId      string `protobuf:"bytes,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	BucketName string `protobuf:"bytes,3,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	DocPath    string `protobuf:"bytes,4,opt,name=doc_path,json=docPath,proto3" json:"doc_path,omitempty"`
}

func (x *ParseDocumentRequest) Reset() {
	*x = ParseDocumentRequest{}
	mi := &file_parser_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDocumentRequest) ProtoMessage() {}

func (x *ParseDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDocumentRequest.ProtoReflect.Descriptor instead.
func (*ParseDocumentRequest) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{3}
}

func (x *ParseDocumentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ParseDocumentRequest) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *ParseDocumentRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ParseDocumentRequest) GetDocPath() string {
	if x != nil {
		return x.DocPath
	}
	return ""
}

type ParseDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ParseDocumentResponse) Reset() {
	*x = ParseDocumentResponse{}
	mi := &file_parser_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDocumentResponse) ProtoMessage() {}

func (x *ParseDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDocumentResponse.ProtoReflect.Descriptor instead.
func (*ParseDocumentResponse) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{4}
}

func (x *ParseDocumentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetParseStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	DocPath    string `protobuf:"bytes,2,opt,name=doc_path,json=docPath,proto3" json:"doc_path,omitempty"`
}

func (x *GetParseStatusRequest) Reset() {
	*x = GetParseStatusRequest{}
	mi := &file_parser_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParseStatusRequest) ProtoMessage() {}

func (x *GetParseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParseStatusRequest.ProtoReflect.Descriptor instead.
func (*GetParseStatusRequest) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetParseStatusRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetParseStatusRequest) GetDocPath() string {
	if x != nil {
		return x.DocPath
	}
	return ""
}

type GetParseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Percent    float32    `protobuf:"fixed32,2,opt,name=percent,proto3" json:"percent,omitempty"`
	IsFinished bool       `protobuf:"varint,3,opt,name=is_finished,json=isFinished,proto3" json:"is_finished,omitempty"`
	IsFailed   bool       `protobuf:"varint,4,opt,name=is_failed,json=isFailed,proto3" json:"is_failed,omitempty"`
	Texts      []*DocText `protobuf:"bytes,5,rep,name=texts,proto3" json:"texts,omitempty"`
	Figures    []*Figure  `protobuf:"bytes,6,rep,name=figures,proto3" json:"figures,omitempty"`
	Tables     []*Table   `protobuf:"bytes,7,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *GetParseStatusResponse) Reset() {
	*x = GetParseStatusResponse{}
	mi := &file_parser_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParseStatusResponse) ProtoMessage() {}

func (x *GetParseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParseStatusResponse.ProtoReflect.Descriptor instead.
func (*GetParseStatusResponse) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetParseStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetParseStatusResponse) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GetParseStatusResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *GetParseStatusResponse) GetIsFailed() bool {
	if x != nil {
		return x.IsFailed
	}
	return false
}

func (x *GetParseStatusResponse) GetTexts() []*DocText {
	if x != nil {
		return x.Texts
	}
	return nil
}

func (x *GetParseStatusResponse) GetFigures() []*Figure {
	if x != nil {
		return x.Figures
	}
	return nil
}

func (x *GetParseStatusResponse) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type StopParseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	DocPath    string `protobuf:"bytes,2,opt,name=doc_path,json=docPath,proto3" json:"doc_path,omitempty"`
}

func (x *StopParseRequest) Reset() {
	*x = StopParseRequest{}
	mi := &file_parser_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopParseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopParseRequest) ProtoMessage() {}

func (x *StopParseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopParseRequest.ProtoReflect.Descriptor instead.
func (*StopParseRequest) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{7}
}

func (x *StopParseRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *StopParseRequest) GetDocPath() string {
	if x != nil {
		return x.DocPath
	}
	return ""
}

type StopParseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopParseResponse) Reset() {
	*x = StopParseResponse{}
	mi := &file_parser_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopParseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopParseResponse) ProtoMessage() {}

func (x *StopParseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parser_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopParseResponse.ProtoReflect.Descriptor instead.
func (*StopParseResponse) Descriptor() ([]byte, []int) {
	return file_parser_service_proto_rawDescGZIP(), []int{8}
}

func (x *StopParseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_parser_service_proto protoreflect.FileDescriptor

var file_parser_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x52, 0x0a, 0x07, 0x44, 0x6f, 0x63, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x72, 0x0a, 0x06, 0x46, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61, 0x74, 0x68, 0x22, 0x75,
	0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x68, 0x74, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x48, 0x74, 0x6d, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x50, 0x61, 0x74, 0x68, 0x22, 0x31, 0x0a, 0x15, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x50, 0x61,
	0x74, 0x68, 0x22, 0x98, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a,
	0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x6f,
	0x63, 0x54, 0x65, 0x78, 0x74, 0x52, 0x05, 0x74, 0x65, 0x78, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x4e, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x50, 0x61, 0x74, 0x68, 0x22, 0x2d, 0x0a,
	0x11, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa0, 0x02, 0x0a,
	0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c,
	0x0a, 0x0d, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x20, 0x5a, 0x1e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parser_service_proto_rawDescOnce sync.Once
	file_parser_service_proto_rawDescData = file_parser_service_proto_rawDesc
)

func file_parser_service_proto_rawDescGZIP() []byte {
	file_parser_service_proto_rawDescOnce.Do(func() {
		file_parser_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_parser_service_proto_rawDescData)
	})
	return file_parser_service_proto_rawDescData
}

var file_parser_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_parser_service_proto_goTypes = []any{
	(*DocText)(nil),                // 0: parser_service.DocText
	(*Figure)(nil),                 // 1: parser_service.Figure
	(*Table)(nil),                  // 2: parser_service.Table
	(*ParseDocumentRequest)(nil),   // 3: parser_service.ParseDocumentRequest
	(*ParseDocumentResponse)(nil),  // 4: parser_service.ParseDocumentResponse
	(*GetParseStatusRequest)(nil),  // 5: parser_service.GetParseStatusRequest
	(*GetParseStatusResponse)(nil), // 6: parser_service.GetParseStatusResponse
	(*StopParseRequest)(nil),       // 7: parser_service.StopParseRequest
	(*StopParseResponse)(nil),      // 8: parser_service.StopParseResponse
}
var file_parser_service_proto_depIdxs = []int32{
	0, // 0: parser_service.GetParseStatusResponse.texts:type_name -> parser_service.DocText
	1, // 1: parser_service.GetParseStatusResponse.figures:type_name -> parser_service.Figure
	2, // 2: parser_service.GetParseStatusResponse.tables:type_name -> parser_service.Table
	3, // 3: parser_service.ParserService.ParseDocument:input_type -> parser_service.ParseDocumentRequest
	5, // 4: parser_service.ParserService.GetParseStatus:input_type -> parser_service.GetParseStatusRequest
	7, // 5: parser_service.ParserService.StopParse:input_type -> parser_service.StopParseRequest
	4, // 6: parser_service.ParserService.ParseDocument:output_type -> parser_service.ParseDocumentResponse
	6, // 7: parser_service.ParserService.GetParseStatus:output_type -> parser_service.GetParseStatusResponse
	8, // 8: parser_service.ParserService.StopParse:output_type -> parser_service.StopParseResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_parser_service_proto_init() }
func file_parser_service_proto_init() {
	if File_parser_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parser_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parser_service_proto_goTypes,
		DependencyIndexes: file_parser_service_proto_depIdxs,
		MessageInfos:      file_parser_service_proto_msgTypes,
	}.Build()
	File_parser_service_proto = out.File
	file_parser_service_proto_rawDesc = nil
	file_parser_service_proto_goTypes = nil
	file_parser_service_proto_depIdxs = nil
}
